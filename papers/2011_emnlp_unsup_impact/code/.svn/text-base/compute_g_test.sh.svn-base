#!/bin/bash

function build_r_array() {
r="$2 <- c("
for value in `cat $1 | head -n 50 | tail -n 49 | cut -d " " -f 2`
do
  r="$r $value,"
done
value=`cat $1 | tail -n 1 | cut -d " " -f 2`
r="$r $value)"
}

#for model in wc-wordsi wc-wordsi-25 wc-wordsi-order wc-wordsi-pos wordsi-rel
#do
#  for clust in cbc stkm sc06 gs-kmeans
#  do
    base=plots/semEval-2010-dv-$model-$clust-test.key
#    for t in avg max
#    do
for semEval in mfs fscore vmeasure sup
do
      base=plots/semEval-2010-$semEval.avg
      build_r_array $base.actual pheno
      act=$r
      build_r_array $base.baseline base
      baseline=$r
      echo "" > compute_g_score.r
      echo $act >> compute_g_score.r
      echo $baseline >> compute_g_score.r
      echo "expected.prob <- base/sum(base)" >> compute_g_score.r
      echo 'source("g.test.r")' >> compute_g_score.r
      echo "g.test(pheno,p=expected.prob)" >> compute_g_score.r
      result=`R --no-save < compute_g_score.r | tail -n 2 | head -n 1 | tr -s " " | cut -d " " -f 2,4`
      echo "$model $clust $t $result"
done
#    done
#  done
#done
